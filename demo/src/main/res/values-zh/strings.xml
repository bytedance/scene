<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">SceneDemo</string>
    <string name="main_scene_title_navigation">导航</string>
    <string name="main_scene_title_navigation_multi_stack">导航(MultiStack)</string>
    <string name="main_scene_title_navigation_router">导航(Router)</string>
    <string name="main_scene_title_anim">动画</string>
    <string name="main_scene_title_architecture_patterns">设计模式</string>
    <string name="main_scene_title_activity_compatibility">Activity兼容</string>
    <string name="main_scene_title_migrate">迁移</string>
    <string name="main_scene_title_benchmark">Benchmark</string>
    <string name="main_scene_title_extreme_case">极端Case</string>
    <string name="main_scene_title_lifecycle">生命周期</string>
    <string name="main_scene_title_composition">UI组合</string>
    <string name="main_title_basic">基本用法</string>
    <string name="main_title_other">其他用法</string>
    <string name="main_title_pro">高级用法</string>
    <string name="main_title_todo">未完成</string>
    <string name="main_nav_btn_clear_task">Push 时清空 Task</string>
    <string name="main_nav_btn_remove">移除中间任意的 Scene</string>
    <string name="main_nav_btn_single_top">Push 的 SingleTop 用法</string>
    <string name="main_nav_btn_single_task">Push 的 SingleTask 用法</string>
    <string name="main_nav_btn_push_pop">Push 和 Pop</string>
    <string name="main_nav_btn_clear_current">Push 时关闭当前页面</string>
    <string name="nav_single_top_btn_root">点击跳到 PushSingleTopScene_0</string>
    <string name="nav_single_top_btn_0">点击跳到 PushSingleTopScene_1</string>
    <string name="nav_single_top_btn_1">点击跳到 PushSingleTopScene_1</string>
    <string name="nav_single_task_btn_0">点击跳到 SingleTaskDemoScene1</string>
    <string name="nav_single_task_btn_1">点击跳到 SingleTaskDemoScene</string>
    <string name="nav_remove_scene_in_task_0">点击跳到 RemoveDemoScene1，然后三秒后移除自己</string>
    <string name="nav_remove_scene_in_task_1">3秒后返回，会发现栈中已经没有 RemoveDemoScene 了</string>
    <string name="nav_clear_task_btn_root">点击跳到 PushClearScene_0</string>
    <string name="nav_clear_task_btn_0">点击跳到 PushClearScene_1</string>
    <string name="nav_clear_task_btn_1">点击跳到 PushClearScene_2</string>
    <string name="nav_clear_task_btn_2">点击跳到 PushClearScene_3，并清空之前的 Stack</string>
    <string name="nav_clear_task_btn_3">点击跳到 PushClearScene_4</string>
    <string name="nav_clear_task_btn_4">点击 Pop 到栈底</string>
    <string name="nav_clear_current_btn">跳到新页面并且关闭当前页面</string>
    <string name="main_nav_btn_for_result">拿返回值</string>
    <string name="main_nav_btn_interrupt_pop">拦截 Pop 的用法</string>
    <string name="main_nav_btn_pop_to">PopTo 的用法</string>
    <string name="nav_pop_to_btn_0">点击跳到 PopToScene_0</string>
    <string name="nav_pop_to_btn_1">点击跳到 PopToScene_1</string>
    <string name="nav_pop_to_btn_2">点击跳到 PopToScene_2</string>
    <string name="nav_pop_to_btn_back0">点击返回到 PopToScene_0</string>
    <string name="nav_pop_to_btn_to_bottom">点击返回到栈底</string>
    <string name="nav_interrupt_tip">再按一次返回</string>
    <string name="main_nav_btn_configuration_change">Configuration Change</string>
    <string name="nav_configuration_tip">请旋转屏幕</string>
    <string name="nav_result_permission">在 Scene 中申请权限</string>
    <string name="nav_result_scene_to_activity">Scene 启动 Activity</string>
    <string name="nav_result_scene_to_activity_without_result">极端 Case：Scene 启动 Activity 但是 Activity 并未 setResult</string>
    <string name="nav_result_scene_to_scene">Scene 启动 Scene</string>
    <string name="nav_result_callback_tip">回调</string>
    <string name="nav_result_permission_tip_failed">失败</string>
    <string name="nav_result_permission_tip_success">成功</string>
    <string name="nav_result_scene_to_scene_btn_0">点击跳到 SceneResultScene_1</string>
    <string name="nav_result_scene_to_scene_btn_1">点击跳到 SceneResultScene_0（PushSingleTop）</string>
    <string name="nav_result_set_result_btn">点击设置 Result</string>
    <string name="main_nav_btn_app_compat">AppCompatScene  模版</string>
    <string name="main_nav_btn_compare_activity">和 Activity 比较性能</string>
    <string name="main_nav_btn_deep_link">Deep Link（未完成）</string>
    <string name="main_nav_btn_ime">输入法问题</string>
    <string name="main_nav_btn_mutil_stack">MutilStack</string>
    <string name="main_nav_btn_reuse">复用 Scene 以加快打开页面速度</string>
    <string name="main_nav_btn_router">路由（未完成）</string>
    <string name="main_nav_btn_theme">主题</string>
    <string name="main_nav_btn_modify_activity_states">修改 Activity 的属性返回后重置</string>
    <string name="nav_reuse_tip">启动一个很重量级别的 Scene，onCreateView 耗时一秒，但是只有第一次会卡</string>
    <string name="nav_reuse_btn">启动</string>
    <string name="nav_compare_description">启动全空 Scene 的耗时通常只有启动全空 Activity 的1/3，启动普通页面至少节省60ms的耗时</string>
    <string name="nav_compare_btn_1">启动空的 Activity</string>
    <string name="nav_compare_btn_2">启动空的 Scene</string>
    <string name="nav_compare_tip">启动耗时：%1$dms</string>
    <string name="nav_theme_btn_1">App 主题 1</string>
    <string name="nav_theme_btn_2">App 主题 2</string>
    <string name="nav_theme_btn_3">App 主题 3</string>
    <string name="nav_multi_stack_btn_1">打开新的 NavigationScene，默认动画</string>
    <string name="nav_multi_stack_btn_2">打开新的 NavigationScene，自定义动画</string>
    <string name="nav_multi_stack_btn_3">每个 Tab 单独有个 BackStack（MaterialDesign 2.0规范）</string>
    <string name="nav_multi_stack_menu_1">主页</string>
    <string name="nav_multi_stack_menu_2">搜索</string>
    <string name="nav_multi_stack_menu_3">通知</string>
    <string name="nav_multi_stack_sub_btn_1">清除显示</string>
    <string name="nav_multi_stack_sub_btn_2">在当前 Tab 的栈中启动空白的 Scene</string>
    <string name="nav_multi_stack_sub_btn_3">在整个页面的栈中启动空白的 Scene</string>
    <string name="nav_activity_states_btn_1">改变状态栏导航栏背景色和图标颜色</string>
    <string name="nav_activity_states_btn_2">自定义状态栏导航栏布局</string>
    <string name="nav_activity_states_layout_btn_1">扩展布局到状态栏和导航栏下</string>
    <string name="nav_activity_states_layout_btn_2">切换显示隐藏状态栏和导航栏</string>
    <string name="nav_ime_btn_1">使用 AdjustResize 模式打开新页面</string>
    <string name="nav_ime_btn_top">只是一个按钮</string>
    <string name="main_part_btn_bottom_tab_layout">底部 TabLayout 用法</string>
    <string name="main_part_btn_hybrid_layout">混合(Drawer+Tab+ViewPager)</string>
    <string name="main_part_btn_drawer">侧边抽屉用法(NavigationView)</string>
    <string name="main_part_btn_tab_view_pager">TabLayout + ViewPager</string>
    <string name="main_part_btn_dialog">对话框</string>
    <string name="main_part_btn_child_scene">切分 Scene 用法(add remove show hide)</string>
    <string name="main_part_btn_scene_place_holder_view">ScenePlaceHolderView(xml)</string>
    <string name="main_part_btn_async_inflate">异步 Inflate</string>
    <string name="main_part_btn_bind_navigationscene_to_fragment">NavigationScene 绑定到 Fragment</string>
    <string name="main_part_btn_bind_groupscene_to_activity">GroupScene 绑定到 Activity</string>
    <string name="main_part_btn_bind_groupscene_to_fragment">GroupScene 绑定到 Fragment</string>
    <string name="main_part_btn_bind_to_view">绑定到 View</string>
    <string name="main_part_btn_floating_window">悬浮窗（未完成）</string>
    <string name="main_part_btn_inherited_scene">继承的 Scene</string>
    <string name="part_dialog_btn_1">对话框，无背景暗色</string>
    <string name="part_dialog_btn_2">对话框，有背景暗色</string>
    <string name="part_dialog_btn_3">底部对话框</string>
    <string name="part_child_btn_1">显示/隐藏 Child Scene0</string>
    <string name="part_child_btn_2">添加/删除 Child Scene0</string>
    <string name="part_child_btn_3">动画显示/隐藏 Child Scene0</string>
    <string name="part_child_btn_4">动画添加/删除 Child Scene0</string>
    <string name="part_inherited_tip">当内嵌层级很深的时候，跨层级的Scene想共享数据会非常困难，所以提供了InheritedScene和InheritedScene.of方法直接取到最近的InheritedScene</string>
    <string name="main_anim_btn_ios_anim">iOS Interaction 动画</string>
    <string name="main_anim_btn_res_anim">使用 XML 资源自定义转场动画</string>
    <string name="main_anim_btn_share_element">Android 5 共享元素动画</string>
    <string name="main_anim_btn_swipe_back">滑动返回动画</string>
    <string name="anim_xml_btn">打开 Scene</string>
    <string name="anim_xml_tip_1">进入动画</string>
    <string name="anim_xml_tip_2">退出动画</string>
    <string name="anim_swipe_back_tip_1">侧滑返回</string>
    <string name="anim_swipe_back_tip_2">非侧滑返回</string>
    <string name="anim_ios_interaction_tip">试试右滑</string>
    <string name="anim_share_element_btn_0">无关按钮</string>
    <string name="anim_share_element_btn_1">打开 Scene</string>
    <string name="anim_share_element_btn_2">打开 Scene，已点击</string>
    <string name="main_lifecycle_child_callbacks">Child Scene Lifecycle Callbacks</string>
    <string name="main_lifecycle_live_data">Live Data</string>
    <string name="main_lifecycle_rx_java">RxJava 绑定</string>
    <string name="main_lifecycle_scope">Scope（未完成）</string>
    <string name="main_lifecycle_status">Lifecycle 状态</string>
    <string name="lifecycle_callback_tip">在 Logcat 中会输出生命周期回调日志</string>
    <string name="main_title_case">极端 Case</string>
    <string name="main_case_destroy_restore">销毁和恢复</string>
    <string name="main_case_push_and_pop">Push 和 Pop</string>
    <string name="main_case_pop_many">同时多个 Pop 超过当前的 Scene 数量</string>
    <string name="main_case_push_pop_remove">Push 和 Pop 动画过程中 Remove</string>
    <string name="main_case_push_pop_in_lifecycle">Scene 生命周期内又执行 Push/Pop</string>
    <string name="main_case_add_remove_group_scene">GroupScene 没添加到Scene之前就add/remove</string>
    <string name="main_case_push_pop_after_finish">Activity finish后立刻 Push/Pop</string>
    <string name="main_case_push_many">同时 Push 100个</string>
    <string name="case_restore_tip">在开发者页面中打开不保留活动开关，在页面销毁和恢复后检查 Checkbox 的状态是否正常</string>
    <string name="case_restore_checkbox">请点击这个 Checkbox</string>
    <string name="case_restore_toast_1">正常启动</string>
    <string name="case_restore_toast_2">销毁后启动</string>
    <string name="case_restore_toast_3">销毁后恢复成功！</string>
    <string name="case_restore_click">总点击次数：%1$d</string>
    <string name="case_push_pop_btn_1">Push+Pop，循环100次</string>
    <string name="case_push_pop_btn_2">Push100次，再Pop100次</string>
    <string name="case_push_pop_btn_3">Push100次，再Pop99次</string>
    <string name="case_push_many_btn">Push 100次</string>
    <string name="case_pop_many_btn_1">Push 1次，Pop 100次</string>
    <string name="case_pop_many_btn_2">使用 PopOptions Push一次，Pop 100次</string>
    <string name="case_pop_many_btn_3">在 onStop() 之后 Pop 100次然后 Push 一次</string>
    <string name="case_pop_many_toast_1">按Home切到后台，5秒后切回来</string>
    <string name="case_pop_many_toast_2">可以切回来了</string>
    <string name="case_remove_btn">如果在动画过程中 Remove，动画会立刻重置到最后的状态</string>
    <string name="case_push_pop_lifecycle_btn_1">Scene onCreateView 的时候执行 Push</string>
    <string name="case_push_pop_lifecycle_btn_2">Scene onCreateView 的时候执行 Pop</string>
    <string name="case_group_scene_btn_1">每次先生成GroupScene，添加Child后再添加进来</string>
    <string name="case_group_scene_btn_2">先生成GroupScene，复用反复删除添加</string>
    <string name="main_activity_btn_scene_get_activity_result">Scene拿Activity返回值</string>
    <string name="main_activity_btn_activity_get_scene_result">Activity 启动 Scene（托管到SceneContainerActivity）</string>
    <string name="patterns_scope">Scope</string>
    <string name="patterns_constructor">构造方法传入</string>
    <string name="patterns_mvp">MVP</string>
    <string name="patterns_mvvm">MVVM</string>
    <string name="patterns_mvi">MVI/Redux/Unidirectional data flow</string>
    <string name="patterns_viper">VIPER</string>
</resources>